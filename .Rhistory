empty.rows <- myDtm_txt[rowTotals == 0, ]$dimnames[1][[1]]
myCorpus_txt <- tm_filter(
myCorpus_txt,
FUN = function(doc) !is.element(meta(doc)$id, empty.rows))
myDtm_txt = DocumentTermMatrix(myCorpus_txt, control = list(minWordLength = 3))
my_TM_txt = LDA(myDtm_txt, method = "Gibbs", k = 4, control = list(nstart = 5, seed = list(2003,5,63,100001,765), burnin = 4000, iter = 2000, thin = 500))
myCorpus_txt <- tm_filter(
myCorpus_txt,
FUN = function(doc) !is.element(meta(doc)$id, empty.rows))
rowTotals <- apply(myDtm_txt, 1, sum)
sam <- sample(wall_protest$row_id, 1000)
text_base <- wall_protest[sam,"all"]
text_base <- sapply(text_base, function(x) tryTolower(x))
myCorpus_txt <- VCorpus(VectorSource(text_base), readerControl = list(language = "ru"))
myCorpus_txt = tm_map(myCorpus_txt, content_transformer(tolower))
myCorpus_txt = tm_map(myCorpus_txt, removePunctuation)
myCorpus_txt = tm_map(myCorpus_txt, removeNumbers)
myCorpus_txt = tm_map(myCorpus_txt, removeWords, stopwords('russian'))
myCorpus_txt = tm_map(myCorpus_txt, stripWhitespace)
dictCorpus_txt = myCorpus_txt
myCorpus_txt = tm_map(myCorpus_txt, stemDocument, language = "ru")
myDtm_txt = DocumentTermMatrix(myCorpus_txt, control = list(minWordLength = 3))
rowTotals <- apply(myDtm_txt, 1, sum)
empty.rows <- myDtm_txt[rowTotals == 0, ]$dimnames[1][[1]]
myCorpus_txt <- tm_filter(
myCorpus_txt,
FUN = function(doc) !is.element(meta(doc)$id, empty.rows))
myDtm_txt = DocumentTermMatrix(myCorpus_txt, control = list(minWordLength = 3))
my_TM_txt = LDA(myDtm_txt, method = "Gibbs", k = 4, control = list(nstart = 5, seed = list(2003,5,63,100001,765), burnin = 4000, iter = 2000, thin = 500))
terms_txt = as.matrix(terms(my_TM_txt, 10))
topic_txt = as.matrix(topics(my_TM_txt))
terms_txt
save.image("D:/Sync/R/networks/VK/text/text_work.RData")
sam2 <- sample(wall_protest$row_id, 1000)
text_base2 <- wall_protest[sam,"all"]
text_base2 <- sapply(text_base, function(x) tryTolower(x))
sam2 <- sample(wall_protest$row_id, 10)
text_base2 <- wall_protest[sam2,"all"]
text_base2 <- sapply(text_base2, function(x) tryTolower(x))
myCorpus_txt <- VCorpus(VectorSource(text_base2), readerControl = list(language = "ru"))
myCorpus_txt = tm_map(myCorpus_txt, content_transformer(tolower))
myCorpus_txt = tm_map(myCorpus_txt, removePunctuation)
myCorpus_txt = tm_map(myCorpus_txt, removeNumbers)
myCorpus_txt = tm_map(myCorpus_txt, removeWords, stopwords('russian'))
myCorpus_txt = tm_map(myCorpus_txt, stripWhitespace)
dictCorpus_txt = myCorpus_txt
myCorpus_txt = tm_map(myCorpus_txt, stemDocument, language = "ru")
myCorpus_txt <- tm_map(myCorpus_txt, stemCompletion_mod, dict = dictCorpus_txt)
myDtm_txt = DocumentTermMatrix(myCorpus_txt, control = list(minWordLength = 3))
rowTotals <- apply(myDtm_txt, 1, sum)
empty.rows <- myDtm_txt[rowTotals == 0, ]$dimnames[1][[1]]
myCorpus_txt <- tm_filter(
myCorpus_txt,
FUN = function(doc) !is.element(meta(doc)$id, empty.rows))
myCorpus_txt <- VCorpus(VectorSource(text_base2), readerControl = list(language = "ru"))
myCorpus_txt = tm_map(myCorpus_txt, content_transformer(tolower))
myCorpus_txt = tm_map(myCorpus_txt, removePunctuation)
myCorpus_txt = tm_map(myCorpus_txt, removeNumbers)
myCorpus_txt = tm_map(myCorpus_txt, removeWords, stopwords('russian'))
myCorpus_txt = tm_map(myCorpus_txt, stripWhitespace)
dictCorpus_txt = myCorpus_txt
myCorpus_txt = tm_map(myCorpus_txt, stemDocument, language = "ru")
myCorpus_txt <- tm_map(myCorpus_txt, stemCompletion_mod, dict = dictCorpus_txt)
myDtm_txt = DocumentTermMatrix(myCorpus_txt, control = list(minWordLength = 3))
my_TM_txt = LDA(myDtm_txt, method = "Gibbs", k = 4, control = list(nstart = 5, seed = list(2003,5,63,100001,765), burnin = 4000, iter = 2000, thin = 500))
rowTotals <- apply(myDtm_txt, 1, sum)
empty.rows <- myDtm_txt[rowTotals == 0, ]$dimnames[1][[1]]
myCorpus_txt <- tm_filter(
myCorpus_txt,
FUN = function(doc) !is.element(meta(doc)$id, empty.rows))
myDtm_txt = DocumentTermMatrix(myCorpus_txt, control = list(minWordLength = 3))
load("D:/Sync/R/networks/VK/text/text_work.RData")
View(Terms_txt)
install.packages("C:/Users/msu/Desktop/DDPQuiz3_1.0.zip", repos = NULL, type = "win.binary")
require(DDPQuiz3)
createmean <- function(x) {
answer <- mean(x)
return(answer)
}
getMethods(createmean)
getMethod(createmean)
methods(createmean)
showMethods(createmean)
get3Method(createmean)
getS3method(createmean)
ftype(mean)
showMethods(show)
getMethod(show)
year = c('2005','2006','2007','2009','2010','2011','2012','2013','2014','2015','2016')
geo = c(38,44,46,62,57,50,41,33,19,11,10)
ukr = c(13,27,23,41,13,20,15,11,30,37,48)
library(rCharts)
pl <- Highcharts$new()
pl$series(data = list(
list(name = "Год", x = year),
list(name = "Грузия", x = geo),
list(name = "Украина", x = ukr)
))
pl$series(data = list(
list(text = "Год", x = year),
list(text = "Грузия", x = geo),
list(text = "Украина", x = ukr)
))
pl$plotOptions(line = list(cursor = 'pointer', dataLabels = TRUE))
pl$chart(type = "line")
pl$plotOptions(line = list(cursor = 'pointer', dataLabels = TRUE))
pl
pl <- Highcharts$new()
pl <- Highcharts$new()
pl$series(data = list(
list(text = "Грузия", x = geo),
list(text = "Украина", x = ukr)
))
pl$xAxis(categories = year)
pl$yAxis(title = list(text = "в %"))
pl$chart(type = "line")
pl$plotOptions(line = list(cursor = 'pointer', dataLabels = TRUE))
pl
pl$plotOptions(line = list(cursor = 'pointer'))
pl
pl$series(data = list(
list(name = "Грузия", x = geo),
list(name = "Украина", x = ukr)
))
pl$xAxis(categories = year)
pl$yAxis(title = list(text = "в %"))
pl$chart(type = "line")
pl$plotOptions(line = list(cursor = 'pointer'))
pl
pl <- Highcharts$new()
pl$series(data = list(
list(name = "Грузия", x = geo),
list(name = "Украина", x = ukr)
))
pl$xAxis(categories = year)
pl$yAxis(title = list(text = "в %"))
pl$chart(type = "line")
pl$plotOptions(line = list(cursor = 'pointer'))
pl
pl <- Highcharts$new()
pl$series(data = list(
list(name = "Грузия", y = geo),
list(name = "Украина", y = ukr)
))
pl$xAxis(categories = year)
pl$yAxis(title = list(text = "в %"))
pl$chart(type = "line")
pl$plotOptions(line = list(cursor = 'pointer'))
pl
pl <- Highcharts$new()
pl$chart(type = "line")
pl$series(data = list(
list(name = "Грузия", y = geo),
list(name = "Украина", y = ukr)
))
pl$xAxis(categories = year)
pl$yAxis(title = list(text = "в %"))
pl$plotOptions(line = list(cursor = 'pointer'))
pl
pl <- Highcharts$new()
pl$chart(type = "line")
pl$series(list(name = "Грузия", data = geo),
list(name = "Украина", data = ukr))
))
pl <- Highcharts$new()
pl$chart(type = "line")
pl$series(list(name = "Грузия", data = geo),
list(name = "Украина", data = ukr))
pl$xAxis(categories = year)
pl$yAxis(title = list(text = "в %"))
pl$plotOptions(line = list(cursor = 'pointer'))
pl
pl <- Highcharts$new()
pl$chart(type = "line")
pl$series(list(data(name = "Грузия", y = geo),
data(name = "Украина", y = ukr)))
pl <- Highcharts$new()
pl$chart(type = "line")
pl$series(list(data = list(name = "Грузия", y = geo),
data = list(name = "Украина", y = ukr)))
pl$xAxis(categories = year)
pl$yAxis(title = list(text = "в %"))
pl$plotOptions(line = list(cursor = 'pointer'))
pl
pl$series(list(data = list(y = geo, y = ukr)))
pl$xAxis(categories = year)
pl$yAxis(title = list(text = "в %"))
pl$plotOptions(line = list(cursor = 'pointer'))
pl
pl <- Highcharts$new()
pl$chart(type = "line")
pl$series(list(data = list(y = geo, y = ukr)))
pl$xAxis(categories = year)
pl$yAxis(title = list(text = "в %"))
pl$plotOptions(line = list(cursor = 'pointer'))
pl
pl <- hPlot(y = c(geo, ukr))
pl <- hPlot(y = c(geo, ukr), x = year)
pl <- Highcharts$new()
pl$chart(type = "line")
pl$series(data = list(y = geo, y = ukr))
pl$xAxis(categories = year)
pl$yAxis(title = list(text = "в %"))
pl$plotOptions(line = list(cursor = 'pointer'))
pl
pl$series(data = list(x = geo, x = ukr))
pl$xAxis(categories = year)
pl$yAxis(title = list(text = "в %"))
pl$plotOptions(line = list(cursor = 'pointer'))
pl
pl$series(data = list(list(y = geo), list(y = ukr)))
pl$xAxis(categories = year)
pl$yAxis(title = list(text = "в %"))
pl$plotOptions(line = list(cursor = 'pointer'))
pl
pl$xAxis(categories = year)
pl$yAxis(title = list(text = "в %"))
pl$plotOptions(line = list(cursor = 'pointer'))
pl
pl$series(data = list(list(y = geo, name = "Georgia"), list(y = ukr)))
pl$xAxis(categories = year)
pl$yAxis(title = list(text = "в %"))
pl$plotOptions(line = list(cursor = 'pointer'))
pl
pl <- Highcharts$new()
pl$chart(type = "line")
pl$series(data = list(list(y = geo, name = "Georgia"), list(y = ukr)))
pl$xAxis(categories = year)
pl$yAxis(title = list(text = "в %"))
pl$plotOptions(line = list(cursor = 'pointer'))
pl
pl$series(data = list(list(y = geo, text = "Georgia"), list(y = ukr)))
pl$xAxis(categories = year)
pl$yAxis(title = list(text = "в %"))
pl$plotOptions(line = list(cursor = 'pointer'))
pl
df <- data.frame(Год = year, Грузия = geo, Украина = ukr)
library(reshape2)
library(reshape)
?melt
df_m <- melt(df, id.vars = Год)
View(df)
df <- data.frame(Year = year, Georgia = geo, Ukraine = ukr)
df_m <- melt(df, id.vars = Year)
df_m <- melt(df, id.vars = "Year")
View(df_m)
pl <- hPlot(value~Year, data = df_m, group = variable, type = "line")
pl <- hPlot(value~Year, data = df_m, group = "variable", type = "line")
pl
pl$plotOptions(line = list(labels = TRUE))
pl$plotOptions(line = list(dataLabels = TRUE))
pl
pl$plotOptions(line = list(dataLabels = list(enabled = TRUE)))
pl
pl$plotOptions(line = list(dataLabels = list(enabled = TRUE, style = list(fontSize = '12px'))))
pl
pl$yAxis(title = list(text = "в %"))
pl
pl$yAxis(title = list(text = iconv("в %", to = "UTF-8")))
pl
y_lab <- "данные в %"
pl <- hPlot(value~Year, data = df_m, group = "variable", type = "line")
pl$plotOptions(line = list(dataLabels = list(enabled = TRUE, style = list(fontSize = '12px'))))
pl$yAxis(title = list(text = iconv(y_lab, to = "UTF-8")))
pl
y_lab <- iconv("данные в %", to = "UTF-8")
pl <- hPlot(value~Year, data = df_m, group = "variable", type = "line")
pl$plotOptions(line = list(dataLabels = list(enabled = TRUE, style = list(fontSize = '12px'))))
pl$yAxis(title = list(text = y_lab))
pl
pl <- hPlot(value~Year, data = df_m, group = "variable", type = "line")
pl$plotOptions(line = list(dataLabels = list(enabled = TRUE, style = list(fontSize = '12px'))))
pl$yAxis(title = list(text = iconv(y_lab, to = "UTF-8")))
pl
df <- data.frame(Год = year, Грузия = geo, Украина = ukr)
df <- data.frame(Год = year, Грузия = geo, Украина = ukr)
df_m <- melt(df, id.vars = "Год")
y_lab <- iconv("данные в %", to = "UTF-8")
x_lab <- c("")
pl <- hPlot(value~Год, data = df_m, group = "variable", type = "line")
pl$plotOptions(line = list(dataLabels = list(enabled = TRUE, style = list(fontSize = '12px'))))
pl$yAxis(title = list(text = iconv(y_lab, to = "UTF-8")))
pl
df_m$variable <- iconv(df_m$variable, to = "UTF-8")
pl <- hPlot(value~Год, data = df_m, group = "variable", type = "line")
pl$plotOptions(line = list(dataLabels = list(enabled = TRUE, style = list(fontSize = '12px'))))
pl$yAxis(title = list(text = iconv(y_lab, to = "UTF-8")))
pl
df_m$variable <- iconv(df_m$variable, to = "UTF-8")
pl <- hPlot(value~Год, data = df_m, group = "variable", type = "line")
pl$plotOptions(line = list(dataLabels = list(enabled = TRUE, style = list(fontSize = '12px'))))
pl$yAxis(title = list(text = iconv(y_lab, to = "UTF-8")))
pl
pl$xAxis(title = iconv("Год", to = "UTF-8"))
pl <- hPlot(value~Год, data = df_m, group = "variable", type = "line")
pl$plotOptions(line = list(dataLabels = list(enabled = TRUE, style = list(fontSize = '12px'))))
pl$yAxis(title = list(text = iconv(y_lab, to = "UTF-8")))
pl$xAxis(title = iconv("Год", to = "UTF-8"))
pl
pl <- hPlot(value~Год, data = df_m, group = "variable", type = "line")
pl$plotOptions(line = list(dataLabels = list(enabled = TRUE, style = list(fontSize = '12px'))))
pl$yAxis(title = list(text = iconv(y_lab, to = "UTF-8")))
pl$xAxis(title = list(texticonv("Год", to = "UTF-8")))
pl
pl <- hPlot(value~Год, data = df_m, group = "variable", type = "line")
pl$plotOptions(line = list(dataLabels = list(enabled = TRUE, style = list(fontSize = '12px'))))
pl$yAxis(title = list(text = iconv(y_lab, to = "UTF-8")))
pl$xAxis(title = list(text = iconv("Год", to = "UTF-8")))
pl
pl <- hPlot(value~Год, data = df_m, group = "variable", type = "line")
pl$plotOptions(line = list(dataLabels = list(enabled = TRUE, style = list(fontSize = '12px'))))
pl$yAxis(title = list(text = iconv(y_lab, to = "UTF-8")))
pl$xAxis(title = list(text = iconv("Год", to = "UTF-8")))
pl
pl <- hPlot(value~Год, data = df_m, group = "variable", type = "line")
pl$plotOptions(line = list(dataLabels = list(enabled = TRUE, style = list(fontSize = '12px'))))
pl$yAxis(title = y_lab)
pl$xAxis(title = list(text = iconv("Год", to = "UTF-8")))
pl
pl <- hPlot(value~Год, data = df_m, group = "variable", type = "line")
pl$plotOptions(line = list(dataLabels = list(enabled = TRUE, style = list(fontSize = '12px'))))
pl$yAxis(title = list(text = y_lab))
pl$xAxis(title = list(text = iconv("Год", to = "UTF-8")))
pl
pl <- hPlot(value~Год, data = df_m, group = "variable", type = "line")
pl$plotOptions(line = list(dataLabels = list(enabled = TRUE, style = list(fontSize = '12px'))))
pl$yAxis(title = list(text = iconv(y_lab, to = "UTF-8")))
pl$xAxis(title = list(text = iconv("Год", to = "UTF-8")))
pl
colnames(df_m) <- iconv(colnames(df_m), to = "UTF-8")
colnames(df_m) <- iconv(colnames(df_m), to = "UTF-8")
y_lab <- iconv("данные в %", to = "UTF-8")
pl <- hPlot(value~Год, data = df_m, group = "variable", type = "line")
pl <- hPlot(value~Год, data = df_m, group = "variable", type = "line")
pl$plotOptions(line = list(dataLabels = list(enabled = TRUE, style = list(fontSize = '12px'))))
pl$yAxis(title = list(text = iconv(y_lab, to = "UTF-8")))
pl$xAxis(title = list(text = iconv("Год", to = "UTF-8")))
pl
pl <- hPlot(value~Год, data = df_m, group = "variable", type = "line")
pl$plotOptions(line = list(dataLabels = list(enabled = TRUE, style = list(fontSize = '12px'))))
pl$yAxis(title = list(text = iconv(y_lab, to = "UTF-8")))
pl$xAxis(title = list(text = ""))
pl
df <- data.frame(Год = year, Грузия = geo, Украина = ukr)
df_m <- melt(df, id.vars = "Год")
df_m$variable <- iconv(df_m$variable, to = "UTF-8")
y_lab <- iconv("данные в %", to = "UTF-8")
pl <- hPlot(value~Год, data = df_m, group = "variable", type = "line")
pl$plotOptions(line = list(dataLabels = list(enabled = TRUE, style = list(fontSize = '12px'))))
pl$yAxis(title = list(text = iconv(y_lab, to = "UTF-8")))
pl$xAxis(title = list(text = ""))
pl
pl$xAxis(categories = df_m$Год))
pl <- hPlot(value~Год, data = df_m, group = "variable", type = "line")
pl$plotOptions(line = list(dataLabels = list(enabled = TRUE, style = list(fontSize = '12px'))))
pl$yAxis(title = list(text = iconv(y_lab, to = "UTF-8")))
pl$xAxis(categories = df_m$Год)
pl
df_m$variable <- iconv(df_m$variable, to = "UTF-8")
pl <- hPlot(value~Год, data = df_m, group = "variable", type = "line")
pl$plotOptions(line = list(dataLabels = list(enabled = TRUE, style = list(fontSize = '12px'))))
pl$yAxis(title = list(text = iconv(y_lab, to = "UTF-8")))
pl$xAxis(categories = df_m$Год)
pl
Sys.setlocale(locale = "UTF-8")
df_m$variable <- iconv(df_m$variable, from = "cp1251", to = "UTF-8")
Encoding(df_m$variable) <- "UTF-8"
pl <- hPlot(value~Год, data = df_m, group = "variable", type = "line")
pl$plotOptions(line = list(dataLabels = list(enabled = TRUE, style = list(fontSize = '12px'))))
pl$yAxis(title = list(text = iconv(y_lab, to = "UTF-8")))
pl$xAxis(categories = df_m$Год)
pl
View(df_m)
df_m <- melt(df, id.vars = "Год")
df_m$variable <- iconv(df_m$variable, from = "cp1251", to = "UTF-8")
y_lab <- iconv("данные в %", to = "UTF-8")
pl <- hPlot(value~Год, data = df_m, group = "variable", type = "line")
pl$plotOptions(line = list(dataLabels = list(enabled = TRUE, style = list(fontSize = '12px'))))
pl$yAxis(title = list(text = iconv(y_lab, to = "UTF-8")))
pl$xAxis(categories = df_m$Год)
pl
df_m$variable <- iconv(df_m$variable, from = "cp1251", to = "UTF-8")
pl <- hPlot(value~Год, data = df_m, group = "variable", type = "line")
pl$plotOptions(line = list(dataLabels = list(enabled = TRUE, style = list(fontSize = '12px'))))
pl$yAxis(title = list(text = iconv(y_lab, to = "UTF-8")))
pl$xAxis(categories = df_m$Год)
pl
pl$show()
pl <- hPlot(value~Год, data = df_m, group = "variable", type = "line")
pl$plotOptions(line = list(dataLabels = list(enabled = TRUE, style = list(fontSize = '12px'))))
pl$yAxis(title = list(text = iconv(y_lab, to = "UTF-8")))
pl$xAxis(categories = df_m$Год)
pl$show('inline', include_assets = TRUE, cdn = TRUE)
pl <- hPlot(value~Год, data = df_m, group = "variable", type = "line")
pl$plotOptions(line = list(dataLabels = list(enabled = TRUE, style = list(fontSize = '12px'))))
pl$yAxis(title = list(text = iconv(y_lab, to = "UTF-8")))
pl$xAxis(categories = df_m$Год)
pl$print()
library(plotly)
devtools::install_github("ropensci/plotly")
library(plotly)
rm(airquality)
save.image("D:/Sync/Левада-Центр/Российско-грузинский опрос/charts/enemy.RData")
devtools::install_github("ropensci/plotly")
library(rCharts)
load("D:/Sync/Левада-Центр/Российско-грузинский опрос/charts/enemy.RData")
require(rCharts)
install.packages("plyr")
require(rCharts)
devtools::install_github("ropensci/plotly")
install.packages("curl")
devtools::install_github("ropensci/plotly")
require(plotly)
set_credentials_file("sgoncharov", "gg44dw6na7")
?set_credentials_file
??set_credentials_file
?plotly
?plotly
?Sys.setenv
Sys.setenv("sgoncharov" = "me")
Sys.setenv("gg44dw6na7" = "mykey")
s <- signup('sgoncharov', 'svgonch@gmail.com')
p <- plotly('sgoncharov', 'gg44dw6na7')
p <- plot_ly('sgoncharov', 'gg44dw6na7')
p <- ggplotly('sgoncharov', 'gg44dw6na7')
py <- plot_ly()
py <- ggplotly()
pl$save()
pl$save("hey.html")
pl$publish("enem_uk_geo", host = "rpubs")
pl$publish("enem_uk_geo", host = "rpubs")
pl$publish("enem_uk_geo", host = "gist")
pl$publish("enem_uk_geo", host = "rpubs")
pl$publish("enem_uk_geo","enem_uk_geo.html", host = "rpubs")
pl$publish("enem_uk_geo.html", host = "rpubs")
pl$print()
pl$show("inline", include_assets = TRUE, cdn = F)
pl
pl$html(
pl$html()
pl$html()
f <- pl$html()
fileConn<-file("output.txt")
writeLines(f, fileConn)
close(fileConn)
pl$publish("ru_enemies", "rpubs")
pl <- hPlot(value~Год, data = df_m, group = "variable", type = "line")
library(rCharts)
library(reshape)
pl <- hPlot(value~Год, data = df_m, group = "variable", type = "line")
pl$plotOptions(line = list(dataLabels = list(enabled = TRUE, style = list(fontSize = '12px'))))
pl$yAxis(title = list(text = iconv(y_lab, to = "UTF-8")))
pl$xAxis(categories = df_m$Год)
pl$publish("ru_enemies", "rpubs")
pl$publish("ru_enemies.html", "rpubs")
pl
pl$publish("ru_enemies", "gist")
pl$publish("ru_enemies", host "rpubs")
pl$publish("ru_enemies", host = "rpubs")
pl$publish("ru_enemies")
pl$publish("ru_enemies", host = "rpubs")
pl$publish
pl$show('inline')
library(knitr)
opts_chunk$set(comment = NA, results = 'asis', comment = NA, tidy = F)
pl$show('iframesrc', cdn = TRUE)
pl$show('inline', include_assets = TRUE, cdn = TRUE)
pl$publish("rus_ukr", host = "gist")
pl$show()
pl$show('inline')
pl$print()
pl$show("inline", include_assets = TRUE, cdn = F)
pl$save("geo_ukr.html", cdn = TRUE)
pl$show('inline', include_assets = TRUE, standalone = TRUE)
pl$show('inline', include_assets = TRUE)
pl
pl$publish(name = "Enemies: Ukraine and Georgia", host = "rpubs")
pl$publish("Enemies: Ukraine and Georgia", host = "rpubs")
find.package("RCurl")
.libPaths( "")
pl$publish(title = 'geo_and_ukr', 'index.html', host = 'rpubs')
pl$publish(title = 'mytitle2', 'index.html', host = 'rpubs')
pl$publish(title = 'mytitle2', 'index2.html', host = 'rpubs')
pl$publish('mytitle2', 'index2.html', host = 'rpubs')
pl$publish(index2.html', host = 'rpubs')
pl$publish('index2.html', host = 'rpubs')
pl$publish('index2', host = 'rpubs')
install.packages("Rcurl")
require(RCurl)
install.packages("RCurl")
install.packages("RCurl")
require(RCurl)
.libPaths( "c:/R/packages")
require(RCurl)
install.packages("RCurl")
install.packages("RCurl")
install.packages("RCurl")
require(rCharts)
pl$publish('index2', host = 'rpubs')
require(RCurl)
pl$publish('index2', host = 'rpubs')
pl$publish('index', host = 'rpubs')
find.package("RCurl")
.libPaths( "")
pl$publish('index', host = 'rpubs')
pl$publish('index', host = 'rpubs')
pl
library(slidify)
setwd("D:/Research/DataProducts/slidify")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
